import streamlit as st
import openai
import matplotlib.pyplot as plt
import pandas as pd

st.set_page_config(page_title="Epidemiolog√≠a 101", page_icon="üß™", layout="wide")

# Estilo visual personalizado
st.markdown("""
    <style>
    body, .block-container {
        background: linear-gradient(135deg, #f0f4f8 0%, #d9e2ec 100%);
        color: #1b2838;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    .block-container {
        padding: 2rem 4rem 3rem 4rem;
        max-width: 1100px;
        margin: auto;
        background: white;
        border-radius: 12px;
        box-shadow: 0 10px 25px rgba(0,0,0,0.1);
    }
    .title {
        font-size: 3rem;
        font-weight: 900;
        color: #0d3b66;
        margin-bottom: 0.2rem;
    }
    .subtitle {
        font-size: 1.3rem;
        color: #3e5c76;
        margin-bottom: 2rem;
        font-weight: 500;
    }
    </style>
""", unsafe_allow_html=True)

st.markdown('<div class="title">üß† Epidemiolog√≠a 101 - Asistente educativo</div>', unsafe_allow_html=True)
st.markdown('<div class="subtitle">Plataforma integral para el aprendizaje de conceptos clave de epidemiolog√≠a, salud p√∫blica y an√°lisis de datos, creada por Yolanda Muvdi.</div>', unsafe_allow_html=True)

if "OPENAI_API_KEY" in st.secrets:
    openai.api_key = st.secrets["OPENAI_API_KEY"]
    st.success("‚úÖ Clave API detectada correctamente.")
else:
    st.error("‚ùå No se encontr√≥ OPENAI_API_KEY. Ve al panel de Secrets en Streamlit Cloud y agr√©gala.")
    st.stop()

# Pesta√±as de navegaci√≥n
tabs = st.tabs([
    "Conceptos B√°sicos",
    "Medidas de Asociaci√≥n",
    "Dise√±os de Estudio",
    "Sesgos y Errores",
    "Glosario Interactivo",
    "Ejercicios Pr√°cticos",
    "Tablas 2x2 y C√°lculos",
    "Visualizaci√≥n de Datos",
    "Chat"
])

# Contenidos directamente en el c√≥digo
with tabs[0]:
    st.header("üìå Conceptos B√°sicos de Epidemiolog√≠a")
    st.markdown("""
    **Epidemiolog√≠a:** Ciencia que estudia la distribuci√≥n y determinantes de los eventos en salud en poblaciones.

    **Incidencia:** N√∫mero de casos nuevos en una poblaci√≥n durante un periodo.

    **Prevalencia:** Proporci√≥n de personas que presentan una condici√≥n de salud en un momento o periodo espec√≠fico.

    **Tasa:** Expresi√≥n matem√°tica que relaciona la frecuencia de un evento con el tiempo/personas en riesgo.

    **Variables:** Caracter√≠sticas observables que pueden medirse (cualitativas o cuantitativas).

    **Poblaci√≥n en riesgo:** Conjunto de individuos susceptibles al evento.

    **Cohorte:** Grupo seguido en el tiempo para observar aparici√≥n de eventos.

    **Casos:** Individuos que presentan la enfermedad de inter√©s.

    **Controles:** Individuos sin la enfermedad de inter√©s.

    **Error aleatorio vs sesgo:** Variabilidad por azar vs. error sistem√°tico.
    """)

with tabs[1]:
    st.header("üìà Medidas de Asociaci√≥n")
    st.markdown("""
    **Riesgo Relativo (RR):** Comparaci√≥n del riesgo de desarrollar un evento entre dos grupos.

    **Odds Ratio (OR):** Comparaci√≥n de las probabilidades de exposici√≥n entre casos y controles.

    **Riesgo Atribuible (RA):** Diferencia entre tasas de incidencia.

    **Fracci√≥n Etiol√≥gica:** Proporci√≥n de riesgo atribuible a la exposici√≥n.

    **Raz√≥n de Tasas:** Comparaci√≥n entre tasas de incidencia por unidad de tiempo/persona.

    **NNT (N√∫mero Necesario a Tratar):** N√∫mero de pacientes a tratar para evitar un caso.

    **Hazard Ratio (HR):** Comparaci√≥n de tasas instant√°neas en estudios de supervivencia.
    """)

with tabs[2]:
    st.header("üìä Dise√±os de Estudio Epidemiol√≥gico")
    st.markdown("""
    **Estudios Observacionales:**
    - Transversales: Miden prevalencia.
    - Cohorte: Eval√∫an incidencia y riesgo.
    - Casos y controles: Eval√∫an asociaciones retrospectivas.

    **Estudios Experimentales:**
    - Ensayos Cl√≠nicos Aleatorizados (RCT): Intervenci√≥n asignada por el investigador.
    - Cuasiexperimentales: No hay aleatorizaci√≥n.

    **Estudios Ecol√≥gicos:** Unidades de an√°lisis son grupos poblacionales.
    """)

with tabs[3]:
    st.header("‚ö†Ô∏è Sesgos y Errores")
    st.markdown("""
    **Sesgo de Selecci√≥n:** Error por la forma de incluir sujetos en el estudio.

    **Sesgo de Informaci√≥n:** Error en la medici√≥n de variables (ej. recuerdo, observaci√≥n).

    **Confusi√≥n:** Asociaci√≥n espuria por efecto de una tercera variable.

    **Error Aleatorio:** Variabilidad por azar, no atribuible a sesgo.

    **Validez interna:** Precisi√≥n de los resultados dentro del estudio.

    **Validez externa:** Generalizaci√≥n de los hallazgos.
    """)

with tabs[4]:
    st.header("üìö Glosario Interactivo A‚ÄìZ")
    glosario = {
        "Incidencia": "N√∫mero de casos nuevos en una poblaci√≥n durante un periodo espec√≠fico.",
        "Prevalencia": "Proporci√≥n de personas con una condici√≥n en un momento dado.",
        "Odds Ratio": "Medida de asociaci√≥n que compara las probabilidades de exposici√≥n.",
        "Riesgo Relativo": "Comparaci√≥n de riesgo entre expuestos y no expuestos.",
        "Cohorte": "Grupo seguido en el tiempo para observar aparici√≥n de eventos.",
        "Ensayo Cl√≠nico Aleatorizado": "Estudio experimental con asignaci√≥n aleatoria de tratamiento.",
        "Tasa de Mortalidad": "Medida de frecuencia de muertes en una poblaci√≥n."
    }
    for termino, definicion in glosario.items():
        with st.expander(termino):
            st.write(definicion)

with tabs[5]:
    st.header("üß™ Ejercicios Pr√°cticos")
    preguntas = [
        {
            "pregunta": "¬øCu√°l es la diferencia entre incidencia y prevalencia?",
            "opciones": [
                "Incidencia mide casos existentes, prevalencia los nuevos.",
                "Incidencia es una proporci√≥n, prevalencia una tasa.",
                "Incidencia mide casos nuevos, prevalencia los existentes.",
                "No hay diferencia."
            ],
            "respuesta_correcta": "Incidencia mide casos nuevos, prevalencia los existentes."
        },
        {
            "pregunta": "¬øQu√© medida se usa com√∫nmente en estudios de casos y controles?",
            "opciones": ["Riesgo Relativo", "Odds Ratio", "Hazard Ratio", "Riesgo Atribuible"],
            "respuesta_correcta": "Odds Ratio"
        }
    ]
    for i, q in enumerate(preguntas):
        st.subheader(f"Pregunta {i+1}")
        respuesta = st.radio(q['pregunta'], q['opciones'], key=f"q{i}")
        if st.button(f"Verificar {i+1}"):
            if respuesta == q['respuesta_correcta']:
                st.success("‚úÖ Correcto")
            else:
                st.error(f"‚ùå Incorrecto. Respuesta correcta: {q['respuesta_correcta']}")

with tabs[6]:
    st.header("üìä Tablas 2x2 y C√°lculos Epidemiol√≥gicos")
    col1, col2 = st.columns(2)
    with col1:
        a = st.number_input("Casos con exposici√≥n (a)", min_value=0, step=1)
        b = st.number_input("Casos sin exposici√≥n (b)", min_value=0, step=1)
    with col2:
        c = st.number_input("Controles con exposici√≥n (c)", min_value=0, step=1)
        d = st.number_input("Controles sin exposici√≥n (d)", min_value=0, step=1)
    if st.button("Calcular RR y OR"):
        try:
            rr = (a / (a + b)) / (c / (c + d)) if (a + b) > 0 and (c + d) > 0 else None
            orr = (a * d) / (b * c) if b > 0 and c > 0 else None
            if rr:
                st.success(f"RR: {rr:.2f}")
            if orr:
                st.success(f"OR: {orr:.2f}")
        except:
            st.error("Error en los c√°lculos")

with tabs[7]:
    st.header("üìà Visualizaci√≥n de Datos")
    st.markdown("Carga tus datos en formato CSV para graficar.")
    uploaded_file = st.file_uploader("Sube un archivo CSV", type=["csv"])
    if uploaded_file is not None:
        df = pd.read_csv(uploaded_file)
        st.dataframe(df)
        col_x = st.selectbox("Selecciona variable para eje X", df.columns)
        col_y = st.selectbox("Selecciona variable para eje Y", df.columns)
        tipo = st.selectbox("Tipo de gr√°fico", ["Barras", "L√≠neas", "Dispersi√≥n"])

        fig, ax = plt.subplots()
        if tipo == "Barras":
            ax.bar(df[col_x], df[col_y])
        elif tipo == "L√≠neas":
            ax.plot(df[col_x], df[col_y])
        elif tipo == "Dispersi√≥n":
            ax.scatter(df[col_x], df[col_y])

        ax.set_xlabel(col_x)
        ax.set_ylabel(col_y)
        ax.set_title(f"{tipo} entre {col_x} y {col_y}")
        st.pyplot(fig)

with tabs[8]:
    st.header("üí¨ Chat con Epidemiolog√≠a 101")
    if "messages" not in st.session_state:
        st.session_state["messages"] = [{
            "role": "system",
            "content": "Eres un docente experto en epidemiolog√≠a. Explica conceptos y resuelve preguntas con claridad y evidencia."
        }]
    for msg in st.session_state.messages:
        with st.chat_message(msg["role"]):
            st.markdown(msg["content"])
    if prompt := st.chat_input("Haz tu pregunta de epidemiolog√≠a..."):
        st.session_state.messages.append({"role": "user", "content": prompt})
        with st.chat_message("user"):
            st.markdown(prompt)
        with st.chat_message("assistant"):
            try:
                response = openai.chat.completions.create(
                    model="gpt-3.5-turbo",
                    messages=st.session_state.messages
                )
                reply = response.choices[0].message.content
                st.markdown(reply)
                st.session_state.messages.append({"role": "assistant", "content": reply})
            except Exception as e:
                st.error(f"Error al comunicarse con OpenAI: {e}")
